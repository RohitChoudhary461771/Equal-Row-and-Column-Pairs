â€¢Approach

 â€¢ First loop for storing the row which has to be compared with each column.
 â€¢ Second loop for selecting the coloumn which has to be compare.
 â€¢ Third loop for comparing the element of selected coloumn.
 â€¢ If the selected coloumn and row are equal then we increment the count .

â€¢Complexity
 â€¢ Time complexity:O(n^3)
 â€¢ Space complexity:O(n)

â€¢Code

class Solution {
public:
    int equalPairs(vector<vector<int>>& grid) {
     int cnt=0;
//ðŸ‘‰Loop for selecting row.
     for(int i=0;i<grid.size();i++){
         vector<int>temp=grid[i];

//ðŸ‘‰Loop for selecting coloumn         
         for(int j=0;j<grid.size();j++){

             bool flag=true;
//ðŸ‘‰Loop for comparing the elements of selected coloumn.            
             for(int z=0;z<grid.size();z++){
                 if(temp[z]!=grid[z][j]){
                     flag=false;
                     break;
                 }
             }
             if(flag==true)cnt++;
         }
     } 

     return cnt;
    }
};
â€¢Complexity
 
 â€¢ Time complexity:O(n^3)
 â€¢ Space complexity:O(1)
  
  class Solution {
public:
    int equalPairs(vector<vector<int>>& grid) {
     int cnt=0;
//ðŸ‘‰Loop for selecting row.
     for(int i=0;i<grid.size();i++){

//ðŸ‘‰Loop for selecting coloumn         
         for(int j=0;j<grid.size();j++){

             bool flag=true;
//ðŸ‘‰Loop for comparing the elements of selected coloumn.            
             for(int z=0;z<grid.size();z++){
                 if(grid[i][z]!=grid[z][j]){
                     flag=false;
                     break;
                 }
             }
             if(flag==true)cnt++;
         }
     } 

     return cnt;
    }
};
